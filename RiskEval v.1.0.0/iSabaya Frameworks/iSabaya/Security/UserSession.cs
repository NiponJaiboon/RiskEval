using System;
using System.Collections.Generic;
using System.Text;
using iSabaya;

namespace iSabaya
{
    [Serializable]
    public class UserSession
    {
        public UserSession()
        {
        }

        public UserSession(iSystem system, User user, string fromIPAddress)
        {
            this.System = system;
            this.User = user;
            this.FromIPAddress = fromIPAddress;
            this.SessionPeriod = new TimeInterval(DateTime.Now);
        }

        private iSystem system;
        public virtual iSystem System
        {
            get { return this.system; }
            set
            {
                this.system = value;
                if (null == this.system)
                    this.SystemID = 0;
                else
                    this.SystemID = this.system.SystemID;
            }
        }

        #region persistent
        /// <summary>
        /// Primary key generated by the database manager
        /// </summary>
        public virtual long ID { get; set; }

        public virtual String FromIPAddress { get; set; }

        public virtual String ApplicationSessionID { get; set; }

        public virtual String LoginMessage { get; set; }

        public virtual String LogoutMessage { get; set; }

        public virtual TimeInterval SessionPeriod { get; set; }

        //private bool isTimeOut = false;
        //public virtual bool IsTimeOut
        //{
        //    get { return isTimeOut; }
        //    set { isTimeOut = value; }
        //}

        private bool failed = false;
        public virtual bool LoginFailed
        {
            get { return this.failed; }
            set { this.failed = value; }
        }

        public virtual User User { get; set; }

        public virtual String UserName { get; set; }

        public virtual SystemEnum SystemID { get; set; }

        private IList<UserSessionLog> sessionLogs;
        public virtual IList<UserSessionLog> SessionLogs
        {
            get
            {
                if (null == this.sessionLogs)
                    this.sessionLogs = new List<UserSessionLog>();
                return this.sessionLogs;
            }
            set { this.sessionLogs = value; }
        }

        #endregion persistent

        public virtual void SignOut(Context context, string logoutMessage)
        {
            this.SessionPeriod.To = DateTime.Now; //this.SessionPeriod.ExpiryDate = DateTime.Now;
            this.LogoutMessage = logoutMessage;
            context.PersistenceSession.SaveOrUpdate(this);
        }

        public virtual void TimeOut(Context context, string logoutMessage)
        {
            this.SessionPeriod.To = DateTime.Now; //this.SessionPeriod.ExpiryDate = DateTime.Now;
            //this.LoginFailed = true;
            this.LogoutMessage = logoutMessage;
            context.PersistenceSession.SaveOrUpdate(this);
        }

        public virtual void Save(Context context)
        {
            context.PersistenceSession.SaveOrUpdate(this);
        }

        public virtual string terminateMessage { get; set; }
    }
}